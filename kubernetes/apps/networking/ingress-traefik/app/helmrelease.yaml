---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-traefik
  namespace: networking
spec:
  chart:
    spec:
      chart: traefik
      version: "36.3.0"
      reconcileStrategy: ChartVersion
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: ingress-traefik
        namespace: flux-system
  interval: 15m
  maxHistory: 3
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    # Core configs
    image:
      tag: "v3.3.2"

    ingressClass:
      enabled: true
      isDefaultClass: true

    # Dashboard access
    api:
      dashboard: true
      insecure: true

    # Install and publish the dashboard
    ingressRoute:
      dashboard:
        enabled: true
        matchRule: Host(`traefik.techvomit.xyz`)
        entryPoints: ["websecure"]
        middlewares:
          - name: traefik-dashboard-auth
            namespace: networking
        routes:
          - match: Host(`traefik.techvomit.xyz`)
            kind: Rule
            services:
              - name: api@internal
                kind: TraefikService

    # Create the custom middlewares used by the IngressRoute dashboard (can also be created in another way).
    extraObjects:
      - apiVersion: traefik.io/v1alpha1
        kind: Middleware
        metadata:
          name: traefik-dashboard-auth
          namespace: networking
        spec:
          basicAuth:
            secret: traefik-dashboard-auth-secret

      - apiVersion: traefik.containo.us/v1alpha1
        kind: Middleware
        metadata:
          name: traefik-dashboard-auth
        spec:
          basicAuth:
            secret: traefik-dashboard-auth-secret

    ping: true
    logs:
      general:
        format: json
        level: DEBUG
      access:
        enabled: true
        format: json

    rbac:
      enabled: true

    service:
      annotations:
        # External DNS Annotation
        external-dns.alpha.kubernetes.io/hostname: traefik.techvomit.xyz
      spec:
        # Arbitrarily selected IP address in the metallb IP ranges
        # defined in `k3s-ansible/inventory/cowdogmoo/group_vars/all.yaml`.
        loadBalancerIP: 192.168.20.10
        externalTrafficPolicy: Local

    extraEnvs:
      - name: TZ
        value: "America/Denver"

    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true

      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        publishedService:
          enabled: true

    tlsStore:
      default:
        defaultCertificate:
          secretName: techvomit-xyz-production-tls

    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13

    deployment:
      replicas: 1
      labels:
        app: ingress-traefik

    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 5

    # Set resource limits (required for autoscaling)
    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 500Mi

    pilot:
      enabled: false

    restartPolicy: Always

    dnsConfig:
      options:
        - name: ndots
          value: "1"

    # experimental:
    #   plugins:
    #     enabled: true

    persistence:
      config:
        enabled: true
        type: nfs
        server: 192.168.20.210
        path: /volume1/k8s/traefik

    # metrics:
    #   port: 8082
    #   expose: true
    #   exposedPort: 8082

    ports:
      traefik:
        expose:
          exposedPort: 9000
          protocol: TCP
      web:
        expose:
          exposedPort: 80
      websecure:
        tls:
          enabled: true
          options: "default"
