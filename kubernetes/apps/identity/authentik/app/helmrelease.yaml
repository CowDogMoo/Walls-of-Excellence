---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: identity
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2025.8.4
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: identity
  install:
    timeout: 15m
    remediation:
      retries: 3
  upgrade:
    timeout: 15m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - kind: Secret
      name: authentik-secrets
      valuesKey: AUTHENTIK_SECRET_KEY
      targetPath: authentik.secret_key
    - kind: Secret
      name: authentik-secrets
      valuesKey: AUTHENTIK_POSTGRESQL_PASSWORD
      targetPath: authentik.postgresql.password
    - kind: Secret
      name: authentik-secrets
      valuesKey: GRAFANA_CLIENT_SECRET
      targetPath: blueprints.context.grafana_client_secret
    - kind: Secret
      name: authentik-secrets
      valuesKey: TRAEFIK_CLIENT_SECRET
      targetPath: blueprints.context.traefik_client_secret
  values:
    global:
      image: {}

      # Shared memory volume for all pods (server and worker)
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 256Mi
      volumeMounts:
        - name: dshm
          mountPath: /dev/shm

    authentik:
      log_level: info
      error_reporting:
        enabled: false
      postgresql:
        host: authentik-postgresql
        name: authentik
        user: authentik

    blueprints:
      configMaps:
        - authentik-oauth-blueprint
        - authentik-passkeys-blueprint

    server:
      replicas: 1
      envFrom:
        - secretRef:
            name: authentik-secrets
      resources:
        requests:
          memory: 512Mi
          cpu: 500m
        limits:
          memory: 2Gi
          cpu: 2000m

      startupProbe:
        httpGet:
          path: /-/health/live/
          port: 9000
        initialDelaySeconds: 90
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 60

      livenessProbe:
        httpGet:
          path: /-/health/live/
          port: 9000
        initialDelaySeconds: 60
        periodSeconds: 30
        timeoutSeconds: 10
        failureThreshold: 3

      readinessProbe:
        httpGet:
          path: /-/health/ready/
          port: 9000
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 3

      ingress:
        enabled: true
        ingressClassName: ingress-traefik
        hosts:
          - &host auth.techvomit.xyz
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: techvomit-xyz-production-tls

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

    worker:
      enabled: true
      replicas: 1
      envFrom:
        - secretRef:
            name: authentik-secrets

      resources:
        requests:
          memory: 256Mi
          cpu: 500m
        limits:
          memory: 1Gi

      startupProbe:
        exec:
          command:
            - ak
            - healthcheck
        initialDelaySeconds: 90
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 60
        successThreshold: 1

      livenessProbe:
        exec:
          command:
            - ak
            - healthcheck
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 3
        successThreshold: 1

      readinessProbe:
        exec:
          command:
            - ak
            - healthcheck
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 3
        successThreshold: 1

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

    postgresql:
      enabled: true

      auth:
        username: authentik
        database: authentik
        existingSecret: authentik-secrets
        secretKeys:
          adminPasswordKey: AUTHENTIK_POSTGRESQL_PASSWORD
          userPasswordKey: AUTHENTIK_POSTGRESQL_PASSWORD

      primary:
        persistence:
          enabled: true
          storageClass: nfs-client
          size: 8Gi

        resources:
          requests:
            memory: 256Mi
            cpu: 500m
          limits:
            memory: 1Gi
            cpu: 1000m

    redis:
      enabled: true
      image:
        registry: docker.io
        repository: library/redis
        tag: "8.2.2"

      architecture: standalone
      auth:
        enabled: false

      master:
        persistence:
          enabled: true
          storageClass: nfs-client
          size: 1Gi
        resources:
          requests:
            memory: 128Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 500m
