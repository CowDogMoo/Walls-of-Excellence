{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  gitAuthor: 'cowdogmoo-renovate-bot <157187596+cowdogmoo-renovate-bot[bot]@users.noreply.github.com>',
  extends: [
    'config:recommended',
    'docker:enableMajor',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':enablePreCommit',
    ':automergeDigest',
    ':automergeBranch',
    'github>CowDogMoo/Walls-of-Excellence//.github/renovate/autoMerge.json5',
    'github>CowDogMoo/Walls-of-Excellence//.github/renovate/commitMessage.json5',
    'github>CowDogMoo/Walls-of-Excellence//.github/renovate/labels.json5',
    'github>CowDogMoo/Walls-of-Excellence//.github/renovate/semanticCommits.json5',
    'helpers:pinGitHubActionDigests',
  ],
  dependencyDashboardLabels: [
    'renovate-dashboard',
  ],
  dependencyDashboardTitle: 'Renovate Dashboard ðŸ¤–',
  suppressNotifications: [
    'prIgnoreNotification',
  ],
  rebaseWhen: 'conflicted',
  commitBodyTable: true,
  labels: [
    'renovate',
  ],
  platformAutomerge: true,
  'pre-commit': {
    enabled: true,
  },
  flux: {
    managerFilePatterns: [
      '/kubernetes/.+\\.ya?ml$/',
    ],
  },
  'helm-values': {
    managerFilePatterns: [
      '/kubernetes/.+\\.ya?ml$/',
    ],
  },
  kubernetes: {
    managerFilePatterns: [
      '/kubernetes/.+\\.ya?ml$/',
    ],
  },
  customManagers: [
    {
      customType: 'regex',
      description: 'Process custom dependencies',
      managerFilePatterns: [
        '/kubernetes/.+\\.ya?ml$/',
      ],
      matchStrings: [
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n',
      ],
      datasourceTemplate: '{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}',
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
    },
  ],
  packageRules: [
    {
      description: 'Loose versioning for non-semver packages',
      matchDatasources: [
        'docker',
      ],
      versioning: 'loose',
      matchPackageNames: [
        '/changedetection/',
        '/plex/',
        '/qbittorrent/',
      ],
    },
    {
      description: 'Use custom versioning for Minio',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$',
      matchPackageNames: [
        '/minio/',
      ],
    },
  ],
}
